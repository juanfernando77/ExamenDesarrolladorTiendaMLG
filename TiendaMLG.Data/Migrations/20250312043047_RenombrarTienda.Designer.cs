// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TiendaMLG.Data.Contexts;

#nullable disable

namespace TiendaMLG.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250312043047_RenombrarTienda")]
    partial class RenombrarTienda
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TiendaMLG.Entities.Models.Articulo", b =>
                {
                    b.Property<int>("ArticuloID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ArticuloID"), 1L, 1);

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ArticuloID");

                    b.ToTable("Articulo", (string)null);
                });

            modelBuilder.Entity("TiendaMLG.Entities.Models.ArticuloTienda", b =>
                {
                    b.Property<int>("ArticuloID")
                        .HasColumnType("int");

                    b.Property<int>("TiendaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.HasKey("ArticuloID", "TiendaID");

                    b.HasIndex("TiendaID");

                    b.ToTable("ArticuloTienda", (string)null);
                });

            modelBuilder.Entity("TiendaMLG.Entities.Models.Cliente", b =>
                {
                    b.Property<int>("ClienteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ClienteID"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClienteID");

                    b.ToTable("Cliente", (string)null);
                });

            modelBuilder.Entity("TiendaMLG.Entities.Models.ClienteArticulo", b =>
                {
                    b.Property<int>("ClienteID")
                        .HasColumnType("int");

                    b.Property<int>("ArticuloID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("ID")
                        .HasColumnType("int");

                    b.HasKey("ClienteID", "ArticuloID");

                    b.HasIndex("ArticuloID");

                    b.ToTable("ClienteArticulo", (string)null);
                });

            modelBuilder.Entity("TiendaMLG.Entities.Models.Tienda", b =>
                {
                    b.Property<int>("TiendaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TiendaID"), 1L, 1);

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sucursal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TiendaID");

                    b.ToTable("Tiendas", (string)null);
                });

            modelBuilder.Entity("TiendaMLG.Entities.Models.ArticuloTienda", b =>
                {
                    b.HasOne("TiendaMLG.Entities.Models.Articulo", "Articulo")
                        .WithMany("ArticuloTiendas")
                        .HasForeignKey("ArticuloID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TiendaMLG.Entities.Models.Tienda", "Tienda")
                        .WithMany("ArticuloTiendas")
                        .HasForeignKey("TiendaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Tienda");
                });

            modelBuilder.Entity("TiendaMLG.Entities.Models.ClienteArticulo", b =>
                {
                    b.HasOne("TiendaMLG.Entities.Models.Articulo", "Articulo")
                        .WithMany("ClienteArticulos")
                        .HasForeignKey("ArticuloID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TiendaMLG.Entities.Models.Cliente", "Cliente")
                        .WithMany("ClienteArticulos")
                        .HasForeignKey("ClienteID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Articulo");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("TiendaMLG.Entities.Models.Articulo", b =>
                {
                    b.Navigation("ArticuloTiendas");

                    b.Navigation("ClienteArticulos");
                });

            modelBuilder.Entity("TiendaMLG.Entities.Models.Cliente", b =>
                {
                    b.Navigation("ClienteArticulos");
                });

            modelBuilder.Entity("TiendaMLG.Entities.Models.Tienda", b =>
                {
                    b.Navigation("ArticuloTiendas");
                });
#pragma warning restore 612, 618
        }
    }
}
